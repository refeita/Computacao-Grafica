package main;

import panels.PanelMenuCircunferencia;
import panels.PanelMenuRasterizacao;
import panels.PanelPlanoCartesiano;
import retas.Rasterizacao;
import sistemacoordenadas.FuncoesDeNormalizacao;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import auxiliares.RasterizacaoEnum;
import circunferencia.Circunferencia;

/**
 * Representa a tela inicial da aplicação.
 *
 */
public class App extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;

	private final PanelMenuRasterizacao panelMenuRasterizacao;
    private final PanelMenuCircunferencia panelMenuCircunferencia;


    /**
     * Construtor
     */
    public App() {
        panelMenuRasterizacao = PanelMenuRasterizacao.getInstance();
        panelMenuCircunferencia = PanelMenuCircunferencia.getInstance();

        initComponents();
        openMenuReta(null);
        sistemaCoordenadas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    @SuppressWarnings("deprecation")
	private void initComponents() {

        panelMenuLeft = new javax.swing.JPanel();
        panelBox = new javax.swing.JPanel();
        panelFooter = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelDCX = new javax.swing.JLabel();
        labelDCY = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelNDCY = new javax.swing.JLabel();
        labelNDCX = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        labelX = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labelY = new javax.swing.JLabel();
        panelPlanoCartesiano = panels.PanelPlanoCartesiano.getInstance();
        menuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemReta = new javax.swing.JMenuItem();
        menuItemCircuferencia = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenu();
       

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Projeto Computação Gráfica");
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(1080, 720));
        setName("framePrincipal"); // NOI18N
        

        panelMenuLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelMenuLeft.setMinimumSize(new java.awt.Dimension(240, 0));
        panelMenuLeft.setPreferredSize(new java.awt.Dimension(240, 2));

        javax.swing.GroupLayout panelMenuLeftLayout = new javax.swing.GroupLayout(panelMenuLeft);
        panelMenuLeft.setLayout(panelMenuLeftLayout);
        panelMenuLeftLayout.setHorizontalGroup(
            panelMenuLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );
        panelMenuLeftLayout.setVerticalGroup(
            panelMenuLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );

        panelFooter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelFooter.setMinimumSize(new java.awt.Dimension(170, 100));
        panelFooter.setPreferredSize(new java.awt.Dimension(170, 327));

        jLabel3.setBackground(new java.awt.Color(34, 139, 34));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("<html><h3 align=\"center\">Coordenadas<br/>de Entrada</h3></html>");
        jLabel3.setMinimumSize(new java.awt.Dimension(170, 54));
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(170, 54));

        jLabel4.setBackground(new java.awt.Color(255, 215, 0));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setBackground(new java.awt.Color(0,0,0));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html><h3 align=\"center\">Coordenadas<br/>de Saída</h3></html>");
        jLabel4.setMinimumSize(new java.awt.Dimension(170, 54));
        jLabel4.setOpaque(true);
        jLabel4.setPreferredSize(new java.awt.Dimension(170, 54));

        jLabel5.setBackground(new java.awt.Color(0, 0, 255));
        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("<html><h3 align=\"center\">Coordenadas<br/>de Normalização</h3></html>");
        jLabel5.setMinimumSize(new java.awt.Dimension(170, 54));
        jLabel5.setOpaque(true);
        jLabel5.setPreferredSize(new java.awt.Dimension(170, 54));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("DCX:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("DCY:");

        labelDCX.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelDCX.setText("0");

        labelDCY.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelDCY.setText("0");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("NDCY:");

        labelNDCY.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelNDCY.setText("0");

        labelNDCX.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelNDCX.setText("0");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("NDCX:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("X:");

        labelX.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelX.setText("0");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Y:");

        labelY.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        labelY.setText("0");

        javax.swing.GroupLayout panelFooterLayout = new javax.swing.GroupLayout(panelFooter);
        panelFooter.setLayout(panelFooterLayout);
        panelFooterLayout.setHorizontalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(panelFooterLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelFooterLayout.createSequentialGroup()
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDCY)
                                    .addComponent(labelDCX)))
                            .addGroup(panelFooterLayout.createSequentialGroup()
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNDCY)
                                    .addComponent(labelNDCX)))
                            .addGroup(panelFooterLayout.createSequentialGroup()
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelY)
                                    .addComponent(labelX))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFooterLayout.setVerticalGroup(
            panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelDCX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(labelDCY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(labelNDCX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(labelNDCY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(labelX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(labelY))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelPlanoCartesiano.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelPlanoCartesiano.setPreferredSize(new java.awt.Dimension(550, 550));

        javax.swing.GroupLayout panelPlanoCartesianoLayout = new javax.swing.GroupLayout(panelPlanoCartesiano);
        panelPlanoCartesiano.setLayout(panelPlanoCartesianoLayout);

        javax.swing.GroupLayout panelBoxLayout = new javax.swing.GroupLayout(panelBox);
        panelBox.setLayout(panelBoxLayout);
        panelBoxLayout.setHorizontalGroup(
            panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBoxLayout.createSequentialGroup()
                .addComponent(panelPlanoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelBoxLayout.setVerticalGroup(
            panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPlanoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
            .addComponent(panelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
        );

        menuBar.setPreferredSize(new java.awt.Dimension(104, 40));

        jMenu1.setText("Desenhar");

        menuItemReta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK));
        menuItemReta.setText("Reta");
        menuItemReta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuReta(evt);
            }
        });
        jMenu1.add(menuItemReta);

        menuItemCircuferencia.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK));
        menuItemCircuferencia.setText("Circuferência");
        menuItemCircuferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuCircunferencia(evt);
            }
        });
        jMenu1.add(menuItemCircuferencia);

        menuBar.add(jMenu1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK));

        menuSobre.setText("Sobre");


        menuBar.add(menuSobre);
        
        JMenuItem equipeMenuItem = new JMenuItem("Equipe");
		menuSobre.add(equipeMenuItem);
		
		equipeMenuItem.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				
				EventQueue.invokeLater(new Runnable() {
					@Override
					public void run() {
						try {
							JOptionPane.showMessageDialog(null, "Leandro Lincoln\n"
															+ "Pedro \n"
															+ "Rafael \n"
															+ "Rafaela Candido",
									"EQUIPE", JOptionPane.INFORMATION_MESSAGE);
						} catch (Exception e) {
							e.printStackTrace();
						}
					}
				});
			}
		});

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMenuLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMenuLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1096, 759));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuReta(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuReta
        panelMenuLeft.setVisible(true);

        if (!panelFooter.isValid()) {
            setDefaultBox();
        } else {
            PanelPlanoCartesiano.getInstance().redesenha();
        }
        changeMenuLeft(panelMenuRasterizacao);
    }//GEN-LAST:event_openMenuReta

    private void openMenuCircunferencia(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuCircunferencia
        panelMenuLeft.setVisible(true);

        if (!panelFooter.isValid()) {
            setDefaultBox();
        } else {
            PanelPlanoCartesiano.getInstance().redesenha();
        }
        changeMenuLeft(panelMenuCircunferencia);
    }//GEN-LAST:event_openMenuCircunferencia


    /**
     * Altera o jPanel do menu esquerdo de acordo com o jPanel passado como
     * parametro
     *
     * @param panel O jPanel a ser populado
     */
    private void changeMenuLeft(JPanel panel) {
        panelMenuLeft.removeAll();
        panelMenuLeft.repaint();

        panelMenuLeft.setLayout(new GridLayout());
        panelMenuLeft.add(panel);

        panelMenuLeft.validate();
    }

    /**
     * Altera o jPanel do central adicionando o novo componente passado como
     * parametro.
     *
     * @param panel O jPanel a ser populado
     */
    private void changePanelCentral(Component component) {
        javax.swing.GroupLayout panelBoxLayout = new javax.swing.GroupLayout(panelBox);
        panelBox.setLayout(panelBoxLayout);
        panelBoxLayout.setHorizontalGroup(
                panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelBoxLayout.createSequentialGroup()
                                .addComponent(component, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
        );
        panelBoxLayout.setVerticalGroup(
                panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(component, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }

    /**
     * Coloca o box principal com o layout default
     */
    private void setDefaultBox() {
        if (!panelFooter.isVisible()) {
            panelBox.removeAll();
            System.out.println("App.setDefaultBox()" + "ENTROU TBM<!");
            changePanelCentral(panelPlanoCartesiano);

            javax.swing.GroupLayout panelBoxLayout = new javax.swing.GroupLayout(panelBox);
            panelBox.setLayout(panelBoxLayout);
            panelBoxLayout.setHorizontalGroup(
                    panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBoxLayout.createSequentialGroup()
                                    .addComponent(panelPlanoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(panelFooter, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
            );
            panelBoxLayout.setVerticalGroup(
                    panelBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelPlanoCartesiano, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
                            .addComponent(panelFooter, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
            );
            panelFooter.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    /**
     * Executa o algoritmo de rasterização da reta
     *
     * @param instance Instancia do PanelMenu que o chamou
     */
    public static void runResult(Object instance) {
        if (instance instanceof PanelMenuRasterizacao) {
            processaRasterizacaoReta(PanelMenuRasterizacao.getInstance());
        } else if (instance instanceof PanelMenuCircunferencia) {
            processaRasterizacaoCircunferencia(PanelMenuCircunferencia.getInstance());
        } 
    }

    /**
     * Processa o pedido vindo da tela de rasterização de reta.
     *
     * @param menu
     */
    private static void processaRasterizacaoReta(PanelMenuRasterizacao menu) {
        Rasterizacao rast = Rasterizacao.getInstance();
        PanelPlanoCartesiano.getInstance().redesenha();

        if (menu.getTipoAlgoritimo().equals(RasterizacaoEnum.DDA)) {
            rast.dda(menu.getPontoInicial(), menu.getPontoFinal(), menu.getColor(), menu.getTextAreaResult());
        } else if (menu.getTipoAlgoritimo().equals(RasterizacaoEnum.PONTO_MEDIO)) {
            rast.pontoMedio(menu.getPontoInicial(), menu.getPontoFinal(), menu.getColor(), menu.getTextAreaResult());
        }
    }

    /**
     * Processa o pedido vindo da tela de rasterização de circunferência.
     *
     * @param menu - Possui o getRaio, getColor, getTipoAlgoritimo
     */
    private static void processaRasterizacaoCircunferencia(PanelMenuCircunferencia menu) {
        Circunferencia circ = Circunferencia.getInstance();

        switch (menu.getTipoAlgoritimo()) {
            case PONTO_MEDIO:
                circ.funcaoPontoMedio((int) menu.getRaioX(), menu.getColor());
                break;
            case EQUACAO_EXPLICITA:
                circ.funcaoExplicita((int) menu.getRaioX(), menu.getColor());
                break;
            case TRIGONOMETRIA:
                circ.funcaoTrigonometria((int) menu.getRaioX(), menu.getColor());
                break;
            default:
                break;
        }
    }
    
    

    /**
     * Calcula e exibe o sistema de coordenadas de acordo com os pontos no plano
     * cartesiano O Evento mouseMoved Ã© utilizado para pegar as coordenadas no
     * plano cartesiano
     */
    private void sistemaCoordenadas() {
        panelPlanoCartesiano.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                super.mouseMoved(e); //To change body of generated methods, choose Tools | Templates.
                
                // Pega a instancia do Plano Cartesiano
                PanelPlanoCartesiano planoCartesiano = PanelPlanoCartesiano.getInstance();

                // Calcula o dc - Entrada de dispositivo | Será o mesmo que a saída
                int dcx = e.getX() - planoCartesiano.getValorCentroX();
                int dcy = (e.getY() - planoCartesiano.getValorCentroY()) * -1;

                // Calcula o ndc - Normalização do dispositivo
                float ndcx = FuncoesDeNormalizacao.calcularNDCX(planoCartesiano.getLargura(), dcx);
                float ndcy = FuncoesDeNormalizacao.calcularNDCX(planoCartesiano.getAltura(), dcy);

                labelNDCX.setText(String.format("%.6f", ndcx));
                labelNDCY.setText(String.format("%.6f", ndcy));

                labelDCX.setText(String.valueOf(FuncoesDeNormalizacao.calcularDCX(planoCartesiano.getLargura(), ndcx)));
                labelDCY.setText(String.valueOf(FuncoesDeNormalizacao.calcularDCY(planoCartesiano.getAltura(), ndcy)));
                
                int x = (int) getMousePosition().getX();
                int y = (int) getMousePosition().getY();
                
                labelX.setText(String.valueOf(x));
                labelY.setText(String.valueOf(y));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JLabel labelDCX;
    private javax.swing.JLabel labelDCY;
    private javax.swing.JLabel labelNDCX;
    private javax.swing.JLabel labelNDCY;
    private javax.swing.JLabel labelX;
    private javax.swing.JLabel labelY;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuItemCircuferencia;
    private javax.swing.JMenuItem menuItemReta;
    private javax.swing.JMenu menuSobre;
    private javax.swing.JPanel panelBox;
    private javax.swing.JPanel panelFooter;
    private javax.swing.JPanel panelMenuLeft;
    private static javax.swing.JPanel panelPlanoCartesiano;
    // End of variables declaration//GEN-END:variables
}
